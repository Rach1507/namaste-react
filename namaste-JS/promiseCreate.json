{
    "title": "Create Promise ",
    "desc": "last lecture - consume a promise , this lecture - producer side of the promise - we are Creating a promise in JavaScript",
    "date": "",
    "dates read ": "",
    "how to create a promise  ": "new Promise() constructor",
    "syntax": {
        "creating a promise":
         "const promise = new Promise((resolve, reject) => { \n })",

        "resolve": "The resolve function is called when the promise is fulfilled",
        "reject": "The reject function is called when the promise is rejected",
        "then": "The then() method takes two arguments, a callback for the success case of the promise, and another for the failure case",
        "catch": "The catch() method is used to handle the rejection of a promise",
        "finally": "The finally() method is used to perform cleanup operations, such as freeing up resources"
    },
    "producer": "",
    "consumer": "should write code to handle error scnearios , "
    
}